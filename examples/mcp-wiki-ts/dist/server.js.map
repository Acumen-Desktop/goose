{"version":3,"file":"server.js","sources":["../src/server.ts"],"sourcesContent":["import { McpServer } from \"@modelcontextprotocol/sdk/server/mcp.js\";\nimport { StdioServerTransport } from \"@modelcontextprotocol/sdk/server/stdio.js\";\nimport { z } from \"zod\";\nimport axios from \"axios\";\nimport { JSDOM } from \"jsdom\";\nimport { convertHtmlToMarkdown } from \"dom-to-semantic-markdown\";\n\ninterface WikipediaArticle {\n  title: string;\n  content: string;\n  excerpt?: string;\n  infobox?: string;\n}\n\n/**\n * Extract Wikipedia article content from HTML\n * @param document - The DOM document to extract from\n * @param url - The source URL\n * @returns Extracted article content\n */\nfunction extractWikipediaContent(document: Document, url: string): WikipediaArticle {\n  // Get the main content\n  const content = document.querySelector('.mw-parser-output');\n  if (!content) {\n    throw new Error(\"Could not find article content.\");\n  }\n\n  // Get the title\n  const title = document.querySelector('h1')?.textContent || \n                url.split('/').pop()?.replace(/_/g, ' ') || \n                'Untitled Article';\n\n  // Get the first paragraph as excerpt\n  const firstParagraph = content.querySelector('p:not(.mw-empty-elt)');\n  const excerpt = firstParagraph?.textContent?.trim();\n\n  // Get the infobox if present\n  const infobox = content.querySelector('.infobox');\n  const infoboxContent = infobox?.innerHTML;\n\n  return {\n    title,\n    content: content.innerHTML,\n    ...(excerpt && { excerpt }),\n    ...(infoboxContent && { infobox: infoboxContent })\n  };\n}\n\n// Initialize MCP server\nconst server = new McpServer({\n  name: \"wiki\",\n  version: \"1.0.0\"\n});\n\n// Define the Wikipedia article reader tool\nserver.tool(\n  \"read_wikipedia_article\",\n  { \n    url: z.string()\n      .url()\n      .refine(\n        url => url.includes('wikipedia.org'), \n        'URL must be from wikipedia.org'\n      )\n  },\n  async ({ url }) => {\n    try {\n      // Convert to mobile URL for cleaner content\n      const mobileUrl = url.replace('wikipedia.org', 'm.wikipedia.org');\n\n      // Fetch article\n      const response = await axios.get(mobileUrl, { \n        timeout: 10000,\n        headers: {\n          \"User-Agent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 14_7_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.1.2 Mobile/15E148 Safari/604.1\"\n        }\n      });\n      \n      if (response.status !== 200) {\n        throw new Error(`Failed to retrieve the article. HTTP status code: ${response.status}`);\n      }\n\n      // Parse content\n      const dom = new JSDOM(response.data, { url: mobileUrl });\n      const article = extractWikipediaContent(dom.window.document, mobileUrl);\n\n      // Convert to markdown\n      const markdown = convertHtmlToMarkdown(article.content, {\n        overrideDOMParser: new dom.window.DOMParser(),\n        extractMainContent: true,\n        enableTableColumnTracking: true,\n        includeMetaData: \"basic\",\n        refifyUrls: true\n      });\n\n      // Format content\n      const sections = [\n        `# ${article.title}`,\n        \"\",\n        article.excerpt ? `> ${article.excerpt}\\n` : \"\",\n        article.infobox ? convertHtmlToMarkdown(article.infobox, {\n          overrideDOMParser: new dom.window.DOMParser(),\n          extractMainContent: true\n        }) : \"\",\n        markdown\n      ].filter(Boolean);\n\n      return {\n        content: [{ \n          type: \"text\", \n          text: sections.join(\"\\n\")\n        }]\n      };\n\n    } catch (error) {\n      if (error instanceof Error) {\n        if (error.message.includes('ECONNABORTED')) {\n          throw new Error('INTERNAL_ERROR: Request timed out');\n        }\n        if (axios.isAxiosError(error)) {\n          if (error.response?.status === 404) {\n            throw new Error('INVALID_PARAMS: Article not found');\n          }\n          throw new Error(`INTERNAL_ERROR: Network error: ${error.message}`);\n        }\n        if (error.message.includes('URL must be from wikipedia.org')) {\n          throw new Error(`INVALID_PARAMS: ${error.message}`);\n        }\n        throw new Error(`INTERNAL_ERROR: ${error.message}`);\n      }\n      throw error;\n    }\n  }\n);\n\n// Start the server\nconst transport = new StdioServerTransport();\nawait server.connect(transport);\n"],"names":[],"mappings":"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"}